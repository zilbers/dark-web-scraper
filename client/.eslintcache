[{"C:\\Users\\omri_\\Documents\\GitHub\\dark-web-scraper\\client\\src\\App.js":"1","C:\\Users\\omri_\\Documents\\GitHub\\dark-web-scraper\\client\\src\\reportWebVitals.js":"2","C:\\Users\\omri_\\Documents\\GitHub\\dark-web-scraper\\client\\src\\index.js":"3","C:\\Users\\omri_\\Documents\\GitHub\\dark-web-scraper\\client\\src\\components\\AppBar.js":"4","C:\\Users\\omri_\\Documents\\GitHub\\dark-web-scraper\\client\\src\\hooks\\useDebouncedSearch.js":"5","C:\\Users\\omri_\\Documents\\GitHub\\dark-web-scraper\\client\\src\\components\\LineChart.js":"6","C:\\Users\\omri_\\Documents\\GitHub\\dark-web-scraper\\client\\src\\components\\PieChart.js":"7","C:\\Users\\omri_\\Documents\\GitHub\\dark-web-scraper\\client\\src\\components\\CheckBox.js":"8","C:\\Users\\omri_\\Documents\\GitHub\\dark-web-scraper\\client\\src\\components\\Bins.js":"9","C:\\Users\\omri_\\Documents\\GitHub\\dark-web-scraper\\client\\src\\hooks\\useLogsSearch.js":"10","C:\\Users\\omri_\\Documents\\GitHub\\dark-web-scraper\\client\\src\\components\\Input.js":"11","C:\\Users\\omri_\\Documents\\GitHub\\dark-web-scraper\\client\\src\\context\\UserContext.js":"12","C:\\Users\\omri_\\Documents\\GitHub\\dark-web-scraper\\client\\src\\components\\Modal.js":"13"},{"size":2650,"mtime":1607000552759,"results":"14","hashOfConfig":"15"},{"size":375,"mtime":1606830329518,"results":"16","hashOfConfig":"15"},{"size":632,"mtime":1606988310568,"results":"17","hashOfConfig":"15"},{"size":9737,"mtime":1607079404316,"results":"18","hashOfConfig":"15"},{"size":1033,"mtime":1606855769349,"results":"19","hashOfConfig":"15"},{"size":1448,"mtime":1606983238831,"results":"20","hashOfConfig":"15"},{"size":4918,"mtime":1606949758673,"results":"21","hashOfConfig":"15"},{"size":752,"mtime":1606907454649,"results":"22","hashOfConfig":"15"},{"size":5364,"mtime":1607093794277,"results":"23","hashOfConfig":"15"},{"size":1109,"mtime":1606999047841,"results":"24","hashOfConfig":"15"},{"size":1002,"mtime":1606949831477,"results":"25","hashOfConfig":"15"},{"size":642,"mtime":1606998607581,"results":"26","hashOfConfig":"15"},{"size":4724,"mtime":1607087043040,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1tsvsmo",{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"35"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"35"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"35"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},"C:\\Users\\omri_\\Documents\\GitHub\\dark-web-scraper\\client\\src\\App.js",["63"],"C:\\Users\\omri_\\Documents\\GitHub\\dark-web-scraper\\client\\src\\reportWebVitals.js",[],["64","65"],"C:\\Users\\omri_\\Documents\\GitHub\\dark-web-scraper\\client\\src\\index.js",[],["66","67"],"C:\\Users\\omri_\\Documents\\GitHub\\dark-web-scraper\\client\\src\\components\\AppBar.js",["68","69","70"],"import React from 'react';\r\nimport { fade, makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport MoreIcon from '@material-ui/icons/MoreVert';\r\nimport NewReleasesIcon from '@material-ui/icons/NewReleases';\r\nimport ReplayIcon from '@material-ui/icons/Replay';\r\nimport WorkIcon from '@material-ui/icons/Work';\r\nimport WorkOffIcon from '@material-ui/icons/WorkOff';\r\nimport { UserContext } from '../context/UserContext';\r\nimport Modal from './Modal';\r\nimport axios from 'axios';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    display: 'none',\r\n    [theme.breakpoints.up('sm')]: {\r\n      display: 'block',\r\n    },\r\n  },\r\n  search: {\r\n    position: 'relative',\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: fade(theme.palette.common.white, 0.15),\r\n    '&:hover': {\r\n      backgroundColor: fade(theme.palette.common.white, 0.25),\r\n    },\r\n    marginRight: theme.spacing(2),\r\n    marginLeft: 0,\r\n    width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      marginLeft: theme.spacing(3),\r\n      width: 'auto',\r\n    },\r\n  },\r\n  searchIcon: {\r\n    padding: theme.spacing(0, 2),\r\n    height: '100%',\r\n    position: 'absolute',\r\n    pointerEvents: 'none',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  inputRoot: {\r\n    color: 'inherit',\r\n  },\r\n  inputInput: {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    // vertical padding + font size from searchIcon\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n    transition: theme.transitions.create('width'),\r\n    width: '100%',\r\n    [theme.breakpoints.up('md')]: {\r\n      width: '20ch',\r\n    },\r\n  },\r\n  sectionDesktop: {\r\n    display: 'none',\r\n    [theme.breakpoints.up('md')]: {\r\n      display: 'flex',\r\n    },\r\n  },\r\n  sectionMobile: {\r\n    display: 'flex',\r\n    [theme.breakpoints.up('md')]: {\r\n      display: 'none',\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function PrimarySearchAppBar({\r\n  length,\r\n  deleted,\r\n  setHiding,\r\n  setInputText,\r\n  inputText,\r\n  getData,\r\n}) {\r\n  const context = React.useContext(UserContext);\r\n  const classes = useStyles();\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const [scraperStatus, setScraperStatus] = React.useState({\r\n    message: 'Waiting for update!',\r\n    active: false,\r\n  });\r\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\r\n\r\n  const isMenuOpen = Boolean(anchorEl);\r\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\r\n\r\n  const handleProfileMenuOpen = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleMobileMenuClose = () => {\r\n    setMobileMoreAnchorEl(null);\r\n  };\r\n\r\n  const handleMenuClose = () => {\r\n    setAnchorEl(null);\r\n    handleMobileMenuClose();\r\n  };\r\n\r\n  const handleMobileMenuOpen = (event) => {\r\n    setMobileMoreAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const checkStatus = async () => {\r\n    const { data: results } = await axios.get('/api/data/_status');\r\n    if (!results.checked && results.active === false) {\r\n      await axios.get('/api/data/_check');\r\n      getData();\r\n    }\r\n    setScraperStatus(\r\n      results.message\r\n        ? results\r\n        : { message: 'Something is wrong', active: false }\r\n    );\r\n  };\r\n\r\n  const showAll = async () => {\r\n    axios.put(`/api/user/_alerts?id=${context.userId}`, []);\r\n    setHiding([]);\r\n  };\r\n\r\n  const menuId = 'primary-search-account-menu';\r\n  const renderMenu = (\r\n    <Menu\r\n      anchorEl={anchorEl}\r\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n      id={menuId}\r\n      keepMounted\r\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n      open={isMenuOpen}\r\n      onClose={handleMenuClose}\r\n    >\r\n      <MenuItem onClick={handleMenuClose}>\r\n        Scraper Status:{' '}\r\n        <span\r\n          style={{\r\n            background: scraperStatus.active\r\n              ? 'green'\r\n              : scraperStatus.message === 'On 2 minutes cooldown!'\r\n              ? 'orange'\r\n              : 'red',\r\n            padding: '5px',\r\n            fontWeight: 600,\r\n          }}\r\n        >\r\n          {scraperStatus.message}\r\n        </span>\r\n      </MenuItem>\r\n    </Menu>\r\n  );\r\n\r\n  const mobileMenuId = 'primary-search-account-menu-mobile';\r\n  const renderMobileMenu = (\r\n    <Menu\r\n      anchorEl={mobileMoreAnchorEl}\r\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n      id={mobileMenuId}\r\n      keepMounted\r\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n      open={isMobileMenuOpen}\r\n      onClose={handleMobileMenuClose}\r\n    >\r\n      <MenuItem>\r\n        <IconButton aria-label='show 4 new mails' color='inherit'>\r\n          <Badge badgeContent={4} color='secondary'>\r\n            <MailIcon />\r\n          </Badge>\r\n        </IconButton>\r\n        <p>Messages</p>\r\n      </MenuItem>\r\n      <MenuItem>\r\n        <IconButton aria-label='show 11 new notifications' color='inherit'>\r\n          <Badge badgeContent={11} color='secondary'>\r\n            <NotificationsIcon />\r\n          </Badge>\r\n        </IconButton>\r\n        <p>Notifications</p>\r\n      </MenuItem>\r\n      <MenuItem onClick={handleProfileMenuOpen}>\r\n        <IconButton\r\n          aria-label='account of current user'\r\n          aria-controls='primary-search-account-menu'\r\n          aria-haspopup='true'\r\n          color='inherit'\r\n        >\r\n          <AccountCircle />\r\n        </IconButton>\r\n        <p>Profile</p>\r\n      </MenuItem>\r\n    </Menu>\r\n  );\r\n\r\n  React.useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      checkStatus();\r\n    }, 15000);\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  return (\r\n    <div className={classes.grow}>\r\n      <AppBar position='static'>\r\n        <Toolbar>\r\n          <IconButton\r\n            edge='start'\r\n            className={classes.menuButton}\r\n            color='inherit'\r\n            aria-label='open drawer'\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography className={classes.title} variant='h6' noWrap>\r\n            Dark-Web-Scraper\r\n          </Typography>\r\n          {/* <div className={classes.search}>\r\n            <div className={classes.searchIcon}>\r\n              <SearchIcon />\r\n            </div>\r\n            <InputBase\r\n              placeholder='Search…'\r\n              classes={{\r\n                root: classes.inputRoot,\r\n                input: classes.inputInput,\r\n              }}\r\n              inputProps={{ 'aria-label': 'search' }}\r\n              onChange={({ target }) => {\r\n                setInputText(target.value);\r\n              }}\r\n              value={inputText}\r\n            />\r\n          </div> */}\r\n          <div className={classes.grow} />\r\n          <div className={classes.sectionDesktop}>\r\n            <IconButton\r\n              aria-label='new entries'\r\n              color='inherit'\r\n              onClick={showAll}\r\n            >\r\n              <Badge badgeContent={deleted} color='secondary'>\r\n                <ReplayIcon />\r\n              </Badge>\r\n            </IconButton>\r\n\r\n            <IconButton aria-label='new entries' color='inherit'>\r\n              <Badge badgeContent={length} color='secondary'>\r\n                <NewReleasesIcon />\r\n              </Badge>\r\n            </IconButton>\r\n\r\n            <Modal />\r\n\r\n            <IconButton\r\n              edge='end'\r\n              aria-label='Scraper status'\r\n              aria-controls={menuId}\r\n              aria-haspopup='true'\r\n              onClick={handleProfileMenuOpen}\r\n              color='inherit'\r\n            >\r\n              {scraperStatus.active ? (\r\n                <>\r\n                  <div\r\n                    style={{\r\n                      background: 'green',\r\n                      display: 'flex',\r\n                      padding: '5px',\r\n                    }}\r\n                  >\r\n                    <WorkIcon />\r\n                    {'  '}\r\n                    on\r\n                  </div>\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <div\r\n                    style={{\r\n                      background:\r\n                        scraperStatus.message === 'On 2 minutes cooldown!'\r\n                          ? 'orange'\r\n                          : 'red',\r\n                      display: 'flex',\r\n                      padding: '5px',\r\n                    }}\r\n                  >\r\n                    <WorkOffIcon /> {'  '}\r\n                    off\r\n                  </div>\r\n                </>\r\n              )}\r\n            </IconButton>\r\n          </div>\r\n          <div className={classes.sectionMobile}>\r\n            <IconButton\r\n              aria-label='show more'\r\n              aria-controls={mobileMenuId}\r\n              aria-haspopup='true'\r\n              onClick={handleMobileMenuOpen}\r\n              color='inherit'\r\n            >\r\n              <MoreIcon />\r\n            </IconButton>\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n      {renderMobileMenu}\r\n      {renderMenu}\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\omri_\\Documents\\GitHub\\dark-web-scraper\\client\\src\\hooks\\useDebouncedSearch.js",[],"C:\\Users\\omri_\\Documents\\GitHub\\dark-web-scraper\\client\\src\\components\\LineChart.js",["71","72"],"import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport {\r\n  LineChart,\r\n  Line,\r\n  CartesianGrid,\r\n  YAxis,\r\n  XAxis,\r\n  ResponsiveContainer,\r\n} from 'recharts';\r\nimport styled, { css } from 'styled-components';\r\n\r\nconst Container = styled.div`\r\n  flex-grow: 1;\r\n  @media (max-width: 750px) {\r\n    width: 100%;\r\n  }\r\n\r\n  @media (min-width: 750px) {\r\n    width: 70%;\r\n  }\r\n\r\n  @media (min-width: 900px) {\r\n    width: 40%;\r\n  }\r\n\r\n  @media (min-width: 1600px) {\r\n    width: 600px;\r\n  }\r\n`;\r\n\r\nfunction Chart({ url, type, data }) {\r\n  const [binsData, setBinsData] = useState(undefined);\r\n\r\n  async function getAndSet(url, dataToAnalyze, setter) {\r\n    const { data } = await axios.post(url, dataToAnalyze);\r\n    data.sort((item) => -item[type]);\r\n    setter(data);\r\n  }\r\n\r\n  useEffect(() => {\r\n    getAndSet(url, data, setBinsData);\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Container>\r\n        <h3>By-{type}</h3>\r\n\r\n        <ResponsiveContainer width='100%' aspect={4.0 / 3.0} maxHeight={300}>\r\n          <LineChart\r\n            data={binsData}\r\n            margin={{ top: 5, right: 30, left: 20, bottom: 5 }}\r\n          >\r\n            <Line type='monotone' dataKey={type} stroke='black' />\r\n            <CartesianGrid stroke='#ccc' />\r\n            <XAxis />\r\n            <YAxis dataKey={type} />\r\n          </LineChart>\r\n        </ResponsiveContainer>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Chart;\r\n",["73","74"],"C:\\Users\\omri_\\Documents\\GitHub\\dark-web-scraper\\client\\src\\components\\PieChart.js",["75","76","77"],"import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport {\r\n  Pie,\r\n  PieChart,\r\n  ResponsiveContainer,\r\n  Cell,\r\n  Label,\r\n  Sector,\r\n} from 'recharts';\r\nimport styled from 'styled-components';\r\nimport CheckBox from './CheckBox';\r\nimport Input from './Input';\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  flex-grow: 1;\r\n  @media (max-width: 750px) {\r\n    width: 100%;\r\n  }\r\n\r\n  @media (min-width: 750px) {\r\n    width: 70%;\r\n  }\r\n\r\n  @media (min-width: 900px) {\r\n    width: 40%;\r\n  }\r\n\r\n  @media (min-width: 1600px) {\r\n    width: 600px;\r\n  }\r\n`;\r\n\r\nconst OptionsContainer = styled.div`\r\n  align-self: center;\r\n  @media (max-width: 750px) {\r\n    width: 100%;\r\n  }\r\n\r\n  @media (min-width: 750px) {\r\n    width: 70%;\r\n  }\r\n\r\n  @media (min-width: 900px) {\r\n    width: 40%;\r\n  }\r\n\r\n  @media (min-width: 1600px) {\r\n    width: 300px;\r\n  }\r\n`;\r\nconst COLORS = [\r\n  '#0088FE',\r\n  '#00C49F',\r\n  '#FFBB28',\r\n  '#FF8042',\r\n  '#AAAAAA',\r\n  '#800080',\r\n];\r\n\r\nconst renderActiveShape = (props) => {\r\n  const RADIAN = Math.PI / 180;\r\n  const {\r\n    cx,\r\n    cy,\r\n    midAngle,\r\n    innerRadius,\r\n    outerRadius,\r\n    startAngle,\r\n    endAngle,\r\n    fill,\r\n    payload,\r\n    percent,\r\n    value,\r\n    label,\r\n  } = props;\r\n  const sin = Math.sin(-RADIAN * midAngle);\r\n  const cos = Math.cos(-RADIAN * midAngle);\r\n  const sx = cx + (outerRadius + 10) * cos;\r\n  const sy = cy + (outerRadius + 10) * sin;\r\n  const mx = cx + (outerRadius + 30) * cos;\r\n  const my = cy + (outerRadius + 30) * sin;\r\n  const ex = mx + (cos >= 0 ? 1 : -1) * 22;\r\n  const ey = my;\r\n  const textAnchor = cos >= 0 ? 'start' : 'end';\r\n\r\n  return (\r\n    <g key={payload.name}>\r\n      <text x={cx} y={cy} dy={8} textAnchor='middle' fill={fill}>\r\n        {payload.name}\r\n      </text>\r\n      <Sector\r\n        cx={cx}\r\n        cy={cy}\r\n        innerRadius={innerRadius}\r\n        outerRadius={outerRadius}\r\n        startAngle={startAngle}\r\n        endAngle={endAngle}\r\n        fill={COLORS[value % COLORS.length]}\r\n      />\r\n      <Sector\r\n        cx={cx}\r\n        cy={cy}\r\n        startAngle={startAngle}\r\n        endAngle={endAngle}\r\n        innerRadius={outerRadius + 6}\r\n        outerRadius={outerRadius + 10}\r\n        fill={COLORS[value % COLORS.length]}\r\n      />\r\n      <path\r\n        d={`M${sx},${sy}L${mx},${my}L${ex},${ey}`}\r\n        stroke={fill}\r\n        fill='none'\r\n      />\r\n      <circle cx={ex} cy={ey} r={2} fill={fill} stroke='none' />\r\n      <text\r\n        x={ex + (cos >= 0 ? 1 : -1) * 12}\r\n        y={ey}\r\n        textAnchor={textAnchor}\r\n        fill='#333'\r\n      >{`PV ${label}`}</text>\r\n      <text\r\n        x={ex + (cos >= 0 ? 1 : -1) * 12}\r\n        y={ey}\r\n        dy={18}\r\n        textAnchor={textAnchor}\r\n        fill='#999'\r\n      >\r\n        {`(Rate ${(percent * 100).toFixed(2)}%)`}\r\n      </text>\r\n    </g>\r\n  );\r\n};\r\n\r\nfunction Chart({ url }) {\r\n  const [data, setData] = useState([]);\r\n  const [ready, setReady] = useState(false);\r\n  const [input, setInput] = useState('');\r\n  const [wordList, setWordList] = useState([]);\r\n  const [showing, setShowing] = useState(() => {\r\n    const newShowing = {};\r\n    for (const key of wordList) {\r\n      newShowing[key] = true;\r\n    }\r\n    return newShowing;\r\n  });\r\n  const [activeIndex, setActiveIndex] = useState();\r\n\r\n  async function getAndSet(url, wordList, setter) {\r\n    const newData = [];\r\n    for (const word of wordList) {\r\n      if (showing[word]) {\r\n        const { data: result } = await axios.get(`${url}?q=${word}`);\r\n        newData.push(result);\r\n      }\r\n    }\r\n    setter(newData);\r\n  }\r\n\r\n  const onPieEnter = (data, index) => {\r\n    setActiveIndex(index);\r\n  };\r\n\r\n  const handleClick = () => {\r\n    setWordList((oldList) => [...oldList, input]);\r\n    setInput('');\r\n  };\r\n\r\n  useEffect(() => {\r\n    getAndSet(url, wordList, setData);\r\n    setReady(true);\r\n  }, [wordList, showing]);\r\n\r\n  return (\r\n    <>\r\n      <Container>\r\n        <h3>Keywords Appearance</h3>\r\n        <OptionsContainer>\r\n          <Input value={input} setValue={setInput} label='Search' />\r\n          <button onClick={handleClick}>Add</button>\r\n\r\n          <CheckBox\r\n            showing={showing}\r\n            setShowing={setShowing}\r\n            options={wordList}\r\n          />\r\n        </OptionsContainer>\r\n        {ready && (\r\n          <ResponsiveContainer width='100%' aspect={4.0 / 3.0} maxHeight={300}>\r\n            <PieChart width={730} height={250}>\r\n              <Pie\r\n                activeIndex={activeIndex}\r\n                activeShape={renderActiveShape}\r\n                data={data}\r\n                dataKey='value'\r\n                nameKey='word'\r\n                outerRadius={50}\r\n                fill='#8884d8'\r\n                onMouseEnter={onPieEnter}\r\n              ></Pie>\r\n            </PieChart>\r\n          </ResponsiveContainer>\r\n        )}\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Chart;\r\n","C:\\Users\\omri_\\Documents\\GitHub\\dark-web-scraper\\client\\src\\components\\CheckBox.js",[],["78","79"],"C:\\Users\\omri_\\Documents\\GitHub\\dark-web-scraper\\client\\src\\components\\Bins.js",["80","81"],"C:\\Users\\omri_\\Documents\\GitHub\\dark-web-scraper\\client\\src\\hooks\\useLogsSearch.js",["82"],"import { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nexport default function useSearch(pageNumber, q, sorting, id) {\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(false);\r\n  const [logs, setLogs] = useState([]);\r\n  const [hasMore, setHasMore] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setLogs([]);\r\n  }, [q, sorting]);\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    setError(false);\r\n    let cancel;\r\n    axios({\r\n      method: 'GET',\r\n      url: `/api/data/_bins/${pageNumber}`,\r\n      params: { q, id },\r\n      cancelToken: new axios.CancelToken((c) => (cancel = c)),\r\n    })\r\n      .then((res) => {\r\n        console.log(res);\r\n        setLogs((prevLogs) => {\r\n          return [...prevLogs, ...res.data];\r\n        });\r\n        setHasMore(res.data.length > 0);\r\n        setLoading(false);\r\n      })\r\n      .catch((e) => {\r\n        if (axios.isCancel(e)) return;\r\n        setError(true);\r\n      });\r\n    return () => cancel();\r\n  }, [q, pageNumber, sorting]);\r\n  // }, [pageNumber]);\r\n\r\n  return { loading, error, logs, hasMore };\r\n}\r\n","C:\\Users\\omri_\\Documents\\GitHub\\dark-web-scraper\\client\\src\\components\\Input.js",["83","84"],"import React from 'react';\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport styled, { css } from 'styled-components';\r\n\r\nconst Container = styled.div`\r\n  flex-grow: 1;\r\n`;\r\n\r\nconst useStyles = makeStyles((theme) =>\r\n  createStyles({\r\n    root: {\r\n      '& > *': {\r\n        margin: theme.spacing(1),\r\n        width: '100%',\r\n      },\r\n    },\r\n  })\r\n);\r\n\r\nexport default function BasicTextFields({ value, setValue, label, setPage }) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Container>\r\n      <form className={classes.root} noValidate autoComplete='off'>\r\n        <TextField\r\n          id='standard-basic'\r\n          label={label}\r\n          onChange={({ target }) => {\r\n            if (setPage) {\r\n              setPage(0);\r\n            }\r\n            setValue(target.value);\r\n          }}\r\n          value={value}\r\n          // fullWidth={true}\r\n        />\r\n      </form>\r\n    </Container>\r\n  );\r\n}\r\n","C:\\Users\\omri_\\Documents\\GitHub\\dark-web-scraper\\client\\src\\context\\UserContext.js",[],"C:\\Users\\omri_\\Documents\\GitHub\\dark-web-scraper\\client\\src\\components\\Modal.js",[],{"ruleId":"85","severity":1,"message":"86","line":48,"column":6,"nodeType":"87","endLine":48,"endColumn":8,"suggestions":"88"},{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","replacedBy":"92"},{"ruleId":"89","replacedBy":"93"},{"ruleId":"91","replacedBy":"94"},{"ruleId":"95","severity":1,"message":"96","line":7,"column":8,"nodeType":"97","messageId":"98","endLine":7,"endColumn":17},{"ruleId":"95","severity":1,"message":"99","line":12,"column":8,"nodeType":"97","messageId":"98","endLine":12,"endColumn":18},{"ruleId":"85","severity":1,"message":"100","line":220,"column":6,"nodeType":"87","endLine":220,"endColumn":8,"suggestions":"101"},{"ruleId":"95","severity":1,"message":"102","line":11,"column":18,"nodeType":"97","messageId":"98","endLine":11,"endColumn":21},{"ruleId":"85","severity":1,"message":"103","line":43,"column":6,"nodeType":"87","endLine":43,"endColumn":8,"suggestions":"104"},{"ruleId":"89","replacedBy":"105"},{"ruleId":"91","replacedBy":"106"},{"ruleId":"95","severity":1,"message":"107","line":7,"column":3,"nodeType":"97","messageId":"98","endLine":7,"endColumn":7},{"ruleId":"95","severity":1,"message":"108","line":8,"column":3,"nodeType":"97","messageId":"98","endLine":8,"endColumn":8},{"ruleId":"85","severity":1,"message":"109","line":174,"column":6,"nodeType":"87","endLine":174,"endColumn":25,"suggestions":"110"},{"ruleId":"89","replacedBy":"111"},{"ruleId":"91","replacedBy":"112"},{"ruleId":"95","severity":1,"message":"102","line":11,"column":18,"nodeType":"97","messageId":"98","endLine":11,"endColumn":21},{"ruleId":"95","severity":1,"message":"113","line":55,"column":16,"nodeType":"97","messageId":"98","endLine":55,"endColumn":23},{"ruleId":"85","severity":1,"message":"114","line":37,"column":6,"nodeType":"87","endLine":37,"endColumn":30,"suggestions":"115"},{"ruleId":"95","severity":1,"message":"116","line":2,"column":36,"nodeType":"97","messageId":"98","endLine":2,"endColumn":41},{"ruleId":"95","severity":1,"message":"102","line":4,"column":18,"nodeType":"97","messageId":"98","endLine":4,"endColumn":21},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getHiding'. Either include it or remove the dependency array.","ArrayExpression",["117"],"no-native-reassign",["118"],"no-negated-in-lhs",["119"],["118"],["119"],"no-unused-vars","'InputBase' is defined but never used.","Identifier","unusedVar","'SearchIcon' is defined but never used.","React Hook React.useEffect has a missing dependency: 'checkStatus'. Either include it or remove the dependency array.",["120"],"'css' is defined but never used.","React Hook useEffect has missing dependencies: 'data', 'getAndSet', and 'url'. Either include them or remove the dependency array.",["121"],["118"],["119"],"'Cell' is defined but never used.","'Label' is defined but never used.","React Hook useEffect has missing dependencies: 'getAndSet' and 'url'. Either include them or remove the dependency array.",["122"],["118"],["119"],"'setSort' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["123"],"'Theme' is defined but never used.",{"desc":"124","fix":"125"},"no-global-assign","no-unsafe-negation",{"desc":"126","fix":"127"},{"desc":"128","fix":"129"},{"desc":"130","fix":"131"},{"desc":"132","fix":"133"},"Update the dependencies array to be: [getHiding]",{"range":"134","text":"135"},"Update the dependencies array to be: [checkStatus]",{"range":"136","text":"137"},"Update the dependencies array to be: [data, getAndSet, url]",{"range":"138","text":"139"},"Update the dependencies array to be: [wordList, showing, getAndSet, url]",{"range":"140","text":"141"},"Update the dependencies array to be: [q, pageNumber, sorting, id]",{"range":"142","text":"143"},[1411,1413],"[getHiding]",[6349,6351],"[checkStatus]",[870,872],"[data, getAndSet, url]",[3875,3894],"[wordList, showing, getAndSet, url]",[1007,1031],"[q, pageNumber, sorting, id]"]