[{"C:\\Users\\omri_\\Documents\\GitHub\\dark-web-scraper\\client\\src\\App.js":"1","C:\\Users\\omri_\\Documents\\GitHub\\dark-web-scraper\\client\\src\\reportWebVitals.js":"2"},{"size":791,"mtime":1606724962624,"results":"3","hashOfConfig":"4"},{"size":362,"mtime":1606670517492,"results":"5","hashOfConfig":"4"},{"filePath":"6","messages":"7","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"8"},"1tsvsmo",{"filePath":"9","messages":"10","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\omri_\\Documents\\GitHub\\dark-web-scraper\\client\\src\\App.js",["11"],"import { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport './App.css';\n\nfunction App() {\n  const [data, setData] = useState();\n\n  const getData = async () => {\n    const { data: results } = await axios.get('/api/data');\n    setData(results);\n  };\n\n  const checkForNewData = async () => {\n    await axios.get('/api/data/check');\n  };\n\n  useEffect(() => {\n    getData();\n  }, []);\n  return (\n    <div className='App'>\n      {/* <button onClick={checkForNewData}>Check For New Data</button> */}\n      {data &&\n        data.map((item) => (\n          <div>\n            <h4>{item.headers}</h4>\n            <div>{item.content}</div>\n            <span>{item.author}</span>\n            <span>{item.date}</span>\n          </div>\n        ))}\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\omri_\\Documents\\GitHub\\dark-web-scraper\\client\\src\\reportWebVitals.js",[],{"ruleId":"12","severity":1,"message":"13","line":13,"column":9,"nodeType":"14","messageId":"15","endLine":13,"endColumn":24},"no-unused-vars","'checkForNewData' is assigned a value but never used.","Identifier","unusedVar"]